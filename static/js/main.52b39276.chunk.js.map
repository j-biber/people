{"version":3,"sources":["view/components/Navigation/Navigation.js","view/components/Header.js","view/components/Footer.js","view/components/users/UserCard/UserCard.js","view/components/users/UserItem/UserItem.js","view/components/users/UserList.js","view/components/SearchBar.js","view/components/GenderStats/GenderStats.js","view/components/NoMatch/NoMatch.js","view/components/About/About.js","view/components/Main.js","models/User.js","services/userService.js","shared/constants.js","view/components/Loader/Loader.js","view/App.js","serviceWorker.js","index.js"],"names":["Navigation","_ref","isGrid","onLayoutChange","onRefresh","onPageLinkClick","react_default","a","createElement","className","href","onClick","Header","Navigation_Navigation_Navigation","Footer","lastFetched","UserCard","gender","picture","fullName","email","dob","src","alt","defaultProps","UserItem","UserList","userListItems","users","map","user","index","_user$picture","large","thumbnail","emailEncrypted","UserCard_UserCard_UserCard","key","UserItem_UserItem_UserItem","SearchBar","handleSearch","type","placeholder","aria-label","aria-describedby","onChange","GenderStats","numOfFemales","numOfMales","NoMatch","About","Main","onSearch","page","reduce","acc","obj","About_About_About","Fragment","SearchBar_SearchBar","length","GenderStats_GenderStats_GenderStats","UserList_UserList","NoMatch_NoMatch_NoMatch","User","firstName","lastName","Object","classCallCheck","this","dobObj","getFullName","hideEmailAddress","getDOB","concat","getDate","getMonth","getFullYear","split","emailLast","slice","emailFirst","capitalize","name","charAt","toUpperCase","fetchData","fetch","then","response","json","data","results","_user$name","first","last","date","Date","Loader","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","loadUsers","state","setState","isLoading","fetchUsers","passingTime","start","output","millis","now","minutes","Math","floor","hours","days","timePassedSinceLastFetch","intervalFetch","listOfUsers","currentTime","lastTimeFetchedUsers","interval","clearInterval","setInterval","localStorage","setItem","JSON","stringify","searchUsersByName","e","searchInput","target","value","toLowerCase","searchedUsers","filter","includes","handleRefreshPage","preventDefault","handleLayoutChange","handlePageLinkClick","nativeEvent","outerText","getItem","parse","_this$state","usersToDisplay","Header_Header","Loader_Loader_Loader","Main_Main","Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_view_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52b39276.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\n\r\nconst Navigation = ({ isGrid, onLayoutChange, onRefresh, onPageLinkClick }) => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"page-navigation\">\r\n                <li>\r\n                    <a href=\".\" onClick={onPageLinkClick}>About</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\".\" onClick={onRefresh}>\r\n                        <i className=\"fas fa-redo-alt\"></i>\r\n                    </a>\r\n                </li>\r\n                {isGrid ?\r\n                    <li>\r\n                        <a href=\".\" onClick={onLayoutChange}>\r\n                            <i className=\"fas fa-list\"></i>\r\n                        </a>\r\n                    </li> :\r\n                    <li>\r\n                        <a href=\".\" onClick={onLayoutChange}>\r\n                            <i className=\"fas fa-grip-horizontal\"></i>\r\n                        </a>\r\n                    </li>\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport { Navigation }","import React from 'react';\r\nimport { Navigation } from './Navigation/Navigation';\r\n\r\nconst Header = ({ isGrid, onLayoutChange, onRefresh, onPageLinkClick }) => {\r\n    return (\r\n        <header>\r\n            <div className=\"app-width flex-row header\">\r\n                <div className=\"logo\">\r\n                    <a href=\".\" onClick={onPageLinkClick}>Bit People</a>\r\n                </div>\r\n                <Navigation\r\n                    isGrid={isGrid}\r\n                    onLayoutChange={onLayoutChange}\r\n                    onRefresh={onRefresh}\r\n                    onPageLinkClick={onPageLinkClick}\r\n                />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { Header }\r\n","import React from 'react';\r\n\r\nconst Footer = ({ lastFetched }) => {\r\n    return (\r\n        <footer>\r\n            <div className='app-width flex-row footer'>\r\n                <span>Copyright 2019</span>\r\n                <div>Last update: {lastFetched} ago</div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { Footer }","import React from 'react';\r\nimport './UserCard.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst UserCard = ({ gender, picture, fullName, email, dob }) => {\r\n    return (\r\n        <li\r\n            className={gender === 'female' ? 'card genderColor' : 'card'}\r\n        >\r\n            <img src={picture} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n                <div className=\"username\">{fullName}</div>\r\n                <div className=\"email-address\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    {email}\r\n                </div>\r\n                <div className=\"dob\">\r\n                    <i className=\"fas fa-birthday-cake\"></i>\r\n                    {dob}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nUserCard.propTypes = {\r\n    gender: PropTypes.string.isRequired,\r\n    picture: PropTypes.string,\r\n    fullName: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    dob: PropTypes.string\r\n}\r\n\r\nUserCard.defaultProps = {\r\n    picture: 'https://via.placeholder.com/300.png?text=User+Image',\r\n    dob: 'User did not provide its date of birthday'\r\n}\r\n\r\n\r\n\r\nexport { UserCard }","import React from 'react';\r\nimport './UserItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = ({ gender, picture, fullName, email, dob }) => {\r\n    return (\r\n        <li\r\n            className={gender === 'female' ? 'media my-4 genderColor' : 'media my-4'}\r\n        >\r\n            <img src={picture} className=\"mr-3\" alt=\"...\" />\r\n            <div className=\"media-body\">\r\n                <div className=\"username\">Name: {fullName}</div>\r\n                <div className=\"email-address\">\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    {email}\r\n                </div>\r\n                <div className=\"dob\">\r\n                    <i className=\"fas fa-birthday-cake\"></i>\r\n                    {dob}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nUserItem.propTypes = {\r\n    gender: PropTypes.string.isRequired,\r\n    picture: PropTypes.string,\r\n    fullName: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    dob: PropTypes.string\r\n}\r\n\r\nUserItem.defaultProps = {\r\n    picture: 'https://via.placeholder.com/300.png?text=User+Image',\r\n    dob: 'User did not provide its date of birthday'\r\n}\r\n\r\nexport { UserItem }","import React from 'react';\r\nimport { UserCard } from './UserCard/UserCard';\r\nimport { UserItem } from './UserItem/UserItem';\r\n\r\nconst UserList = ({ isGrid, users }) => {\r\n\r\n    const userListItems = users.map((user, index) => {\r\n\r\n        const { gender, picture: { large, thumbnail }, fullName, emailEncrypted, dob } = user;\r\n\r\n        if (isGrid) {\r\n            return (\r\n                <UserCard\r\n                    key={index}\r\n                    gender={gender}\r\n                    picture={large}\r\n                    fullName={fullName}\r\n                    email={emailEncrypted}\r\n                    dob={dob}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <UserItem\r\n                    key={index}\r\n                    gender={gender}\r\n                    picture={thumbnail}\r\n                    fullName={fullName}\r\n                    email={emailEncrypted}\r\n                    dob={dob}\r\n                />\r\n            )\r\n        }\r\n\r\n    });\r\n\r\n    return (\r\n        <ul className={isGrid ? 'grid' : 'list'}>\r\n            {userListItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport { UserList }\r\n","import React from 'react';\r\n\r\nconst SearchBar = ({ handleSearch }) => {\r\n    return (\r\n        <div className=\"search input-group mb-3\">\r\n            <input\r\n                type=\"search\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search user\"\r\n                aria-label=\"Search Users by Name\"\r\n                aria-describedby=\"button-addon2\"\r\n                onChange={handleSearch} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { SearchBar }\r\n\r\n","import React from 'react';\r\nimport './GenderStats.css';\r\n\r\nconst GenderStats = ({ numOfFemales, numOfMales }) => {\r\n    return (\r\n        <div className=\"stats\">\r\n            <div className=\"stats-female\">\r\n                Female: {numOfFemales}\r\n            </div>\r\n            <div className=\"stats-male\">\r\n                Male: {numOfMales}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { GenderStats }\r\n","import React from 'react';\r\nimport './NoMatch.css';\r\n\r\nconst NoMatch = () => {\r\n    return (\r\n        <div className='no-match'>\r\n            <p>We couldn't find any user matching your search.</p>\r\n            <i className=\"far fa-sad-tear\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { NoMatch }","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about\">\r\n            <div>\r\n                <h1>About</h1>\r\n                <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis perspiciatis, veritatis, odit totam saepe consequuntur hic dolores nesciunt ad nemo possimus, explicabo a fugit temporibus minima porro ipsum! Praesentium, quibusdam! Hic soluta recusandae quam officiis architecto. Qui in dignissimos omnis. Quis, quos error asperiores architecto enim, recusandae sequi minima minus ex cumque maiores tempore! Consectetur qui ad minus assumenda nihil. Commodi quis nesciunt eius tempore iusto debitis consequuntur autem, quo deleniti ipsum quaerat, fugiat modi facere ducimus earum expedita obcaecati repellat animi alias eveniet doloribus dolore impedit. Provident, harum. Natus!</p>\r\n            </div>\r\n            <div>\r\n                <h3>What we do</h3>\r\n                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Voluptate itaque numquam perspiciatis, dolore, alias veniam vero nisi perferendis quos tempore neque commodi tempora natus eveniet ullam temporibus sunt in eum!Aliquam perferendis laboriosam velit quidem, est ullam libero reiciendis incidunt, labore veritatis, ratione quasi in excepturi! Ducimus consequatur quas impedit, vitae incidunt quasi est natus explicabo adipisci laborum fugiat tempore?</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { About }","import React from 'react';\r\nimport { UserList } from './users/UserList';\r\nimport { SearchBar } from './SearchBar';\r\nimport { GenderStats } from './GenderStats/GenderStats';\r\nimport { NoMatch } from './NoMatch/NoMatch';\r\nimport { About } from './About/About';\r\n\r\nconst Main = ({ isGrid, users, onSearch, page }) => {\r\n\r\n    const numOfFemales = users.reduce((acc, obj) => {\r\n        if (obj.gender === 'female') acc++;\r\n        return acc\r\n    }, 0);\r\n\r\n    const numOfMales = users.reduce((acc, obj) => {\r\n        if (obj.gender === 'male') acc++;\r\n        return acc\r\n    }, 0);\r\n\r\n    return (\r\n        <main className='app-width'>\r\n            {(page === 'about') ?\r\n                <About /> :\r\n                <>\r\n                    <SearchBar handleSearch={onSearch} />\r\n                    {users.length ?\r\n                        <>\r\n                            <GenderStats\r\n                                numOfFemales={numOfFemales}\r\n                                numOfMales={numOfMales}\r\n                            />\r\n                            <UserList\r\n                                isGrid={isGrid}\r\n                                users={users}\r\n                            />\r\n                        </> :\r\n                        <NoMatch />\r\n                    }\r\n                </>\r\n            }\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport { Main }\r\n","class User {\r\n    constructor(firstName, lastName, email, dob, picture, gender) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.dobObj = dob;\r\n        this.picture = picture;\r\n        this.gender = gender;\r\n        this.fullName = this.getFullName();\r\n        this.emailEncrypted = this.hideEmailAddress();\r\n        this.dob = this.getDOB();\r\n    }\r\n\r\n    getDOB() {\r\n        return `${this.dobObj.getDate()}.${this.dobObj.getMonth() + 1}.${this.dobObj.getFullYear()}`\r\n    }\r\n\r\n    hideEmailAddress() {\r\n        const email = this.email.split('@');\r\n        const emailLast = email[0].slice(-2);\r\n        const emailFirst = email[0].slice(0, 3);\r\n        const hiddenEmail = `${emailFirst}...${emailLast}@${email[1]}`\r\n        return hiddenEmail;\r\n    }\r\n\r\n    getFullName() {\r\n        const capitalize = (name) => {\r\n            return name.charAt(0).toUpperCase() + name.slice(1);\r\n        }\r\n        return `${capitalize(this.firstName)} ${capitalize(this.lastName)}`\r\n    }\r\n}\r\n\r\nexport default User","import User from '../models/User';\r\nimport { USERS_ENDPOINT } from '../shared/constants';\r\n\r\nconst fetchData = () => {\r\n\r\n    return fetch(USERS_ENDPOINT)\r\n        .then(response =>\r\n            response.json()\r\n        )\r\n        .then(data => {\r\n            return data.results.map(user => {\r\n                const { name: { first, last }, email, dob: { date }, picture, gender } = user;\r\n                return new User(first, last, email, new Date(date), picture, gender)\r\n            });\r\n        });\r\n}\r\n\r\nexport { fetchData }\r\n","export const USERS_ENDPOINT = 'https://randomuser.me/api/?results=100';","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"double-bounce1\"></div>\r\n            <div className=\"double-bounce2\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Loader }","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header';\r\nimport { Footer } from './components/Footer';\r\nimport { Main } from './components/Main';\r\nimport { fetchData } from '../services/userService';\r\nimport { Loader } from './components/Loader/Loader';\r\n// import { passingTime } from '../shared/functions';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisGrid: localStorage.getItem('isGrid') === 'true' ? true : false,\r\n\t\t\tusers: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : null,\r\n\t\t\tisLoading: true,\r\n\t\t\tsearchedUsers: null,\r\n\t\t\tpage: 'list',\r\n\t\t\tlastTimeFetchedUsers: null,\r\n\t\t\tintervalFetch: null,\r\n\t\t\ttimePassedSinceLastFetch: null,\r\n\t\t}\r\n\t}\r\n\r\n\tloadUsers = () => {\r\n\t\tif (!this.state.users) this.fetchUsers();\r\n\t\telse this.setState({\r\n\t\t\tisLoading: false\r\n\t\t});\r\n\t}\r\n\r\n\tpassingTime = (start) => {\r\n\t\tlet millis = Date.now() - start;\r\n\t\tlet output;\r\n\t\r\n\t\tif (millis < 60000) {\r\n\t\t\toutput = 'Less than minute';\r\n\t\t}\r\n\t\tif (millis < 3600000) {\r\n\t\t\tconst minutes = Math.floor(millis / 60000);\r\n\t\t\tif (minutes < 2) output = '1 minute';\r\n\t\t\telse output = `${minutes} minutes`;\r\n\t\t}\r\n\t\tif (millis < 86400000) {\r\n\t\t\tconst hours = Math.floor(millis / 3600000);\r\n\t\t\tif (hours < 2) output = 'Over an hour';\r\n\t\t\telse output = `${hours} hours`;\r\n\t\t}\r\n\t\tif (millis < 604800000) {\r\n\t\t\tconst days = Math.floor(millis / 86400000);\r\n\t\t\tif (days < 2) output = 'Over a day';\r\n\t\t\telse output = `${days} days`;\r\n\t\t}\r\n\t\tif (millis < 2678400000) {\r\n\t\t\toutput = 'Over a week';\r\n\t\t}\r\n\t\telse output = 'Over a month';\r\n\t\r\n\t\tthis.setState({\r\n\t\t\ttimePassedSinceLastFetch: output,\r\n\t\t})\r\n\t}\r\n\r\n\tfetchUsers = () => {\r\n\t\tconst { intervalFetch } = this.state;\r\n\r\n\t\tfetchData()\r\n\t\t\t.then((listOfUsers) => {\r\n\t\t\t\tconst currentTime = Date.now();\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tusers: listOfUsers,\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tlastTimeFetchedUsers: currentTime,\r\n\t\t\t\t});\r\n\t\t\t\treturn listOfUsers;\r\n\t\t\t})\r\n\t\t\t.then((listOfUsers) => {\r\n\t\t\t\tconst start = this.state.lastTimeFetchedUsers;\r\n\t\t\t\tlet interval;\r\n\r\n\t\t\t\tif (intervalFetch) {\r\n\t\t\t\t\tclearInterval(intervalFetch);\r\n\t\t\t\t\tinterval = setInterval(this.passingTime, 1000, start);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = setInterval(this.passingTime, 1000, start);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tintervalFetch: interval,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlocalStorage.setItem('users', JSON.stringify(listOfUsers));\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tsearchUsersByName = (e) => {\r\n\t\tconst searchInput = e.target.value.toLowerCase();\r\n\t\tconst users = this.state.users;\r\n\t\tconst searchedUsers = users.filter(({ fullName }) => {\r\n\t\t\treturn fullName.toLowerCase().includes(searchInput);\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tsearchedUsers,\r\n\t\t})\r\n\t}\r\n\r\n\thandleRefreshPage = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tisLoading: true,\r\n\t\t})\r\n\t\tthis.fetchUsers();\r\n\t}\r\n\r\n\thandleLayoutChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst isGrid = !this.state.isGrid;\r\n\t\tlocalStorage.setItem('isGrid', isGrid);\r\n\t\tthis.setState({\r\n\t\t\tisGrid,\r\n\t\t})\r\n\t}\r\n\r\n\thandlePageLinkClick = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (e.nativeEvent.target.outerText === 'About') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpage: 'about',\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tpage: 'list',\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadUsers();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isGrid, isLoading, users, searchedUsers, page, timePassedSinceLastFetch } = this.state;\r\n\t\tconst usersToDisplay = searchedUsers ? searchedUsers : users;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tisGrid={isGrid}\r\n\t\t\t\t\tonLayoutChange={this.handleLayoutChange}\r\n\t\t\t\t\tonRefresh={this.handleRefreshPage}\r\n\t\t\t\t\tonPageLinkClick={this.handlePageLinkClick}\r\n\t\t\t\t/>\r\n\t\t\t\t{isLoading ?\r\n\t\t\t\t\t<Loader /> :\r\n\t\t\t\t\t<Main\r\n\t\t\t\t\t\tisGrid={isGrid}\r\n\t\t\t\t\t\tpage={page}\r\n\t\t\t\t\t\tusers={usersToDisplay}\r\n\t\t\t\t\t\tonSearch={this.searchUsersByName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t<Footer lastFetched={timePassedSinceLastFetch} />\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './view/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}